<h1>Listing boards</h1>
<br>
<b>A schedule for you company may need to track many resources, for example 30 machines. One schedule with 30 machines shown would be difficult to read and work with. Boards allows grouping of resources so there are only a few on each schedule screen. Currently Boards can only be named Board1, Board2, Board3, etc. </b>
<br>
<br>

<table id="boards" class="table table-striped table-bordered table-condensed">
  <tr>
  	<thead>
    <th>Name</th>
    <th>Site</th>
    <th></th>
    <th></th>
    </thead>
  </tr>

<% @boards.each do |board| %>
  <tr>
  	<tbody>
    <td><%= board.name %></td>
    <td><%= Site.find(board.site_id).name %></td>
    <td><%= link_to 'Edit', edit_board_path(board), :class => 'btn btn-info'    %></td>
    <td><%= link_to 'Destroy', board,  :class => 'btn btn-danger', confirm: 'Are you sure?', method: :delete %></td>
	</tbody>
  </tr>
<% end %>


<%= form_for(@board) do |f| %>
  <% if @board.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@board.errors.count, "error") %> prohibited this board from being saved:</h2>

      <ul>
      <% @board.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  	<tr><td colspan=7><b>Add a new entry below:</b></td></tr>

  	<tr>
  	<%= f.hidden_field :maxscheduler_id, :value => @maxschedulerId %>
    <td><%= f.text_field :name %></td>
  	<td><%= f.select :site_id, Site.where("maxscheduler_id = ?", @maxschedulerId).collect {|site| [ site.name, site.id ] }, :style => 'width: 50px;'  %></td>
  	<td></td>
  	<td></td>
    </tr>
    <tr><td colspan=7><%= f.submit nil , :class => 'btn btn-primary'  %></td></tr>

<% end %>

</table>

<br><br>
